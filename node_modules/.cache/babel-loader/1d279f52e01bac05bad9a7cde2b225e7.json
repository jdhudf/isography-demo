{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shibuya/isography/atelier/frontend/src/components/draggableItem.js\";\nimport React from 'react'; //\n//   DraggableItem.create('svg', editableItem);\n//\n\n/** 選んだ画像をドラッグして移動 **/\n\nclass DraggableItem extends React.Component {\n  static create(svg_id, elem_id) {\n    const draggable = new DraggableItem(svg_id);\n    elem_id.forEach(function (id) {\n      draggable.addElem(id);\n    });\n  }\n\n  constructor(svg_id) {\n    this.dragElem = null;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.svg = document.getElementById(svg_id);\n    this.svg.addEventListener(\"mousemove\", e => this.mouseMove(e), false);\n    this.svg.addEventListener(\"touchmove\", e => this.mouseMove(e), false);\n    this.svg.addEventListener(\"mouseup\", e => this.mouseUp(e), false);\n    this.svg.addEventListener(\"touchend\", e => this.mouseUp(e), false);\n  }\n\n  addElem(elem_id) {\n    const elem = document.getElementById(elem_id);\n    elem.addEventListener(\"mousedown\", e => this.mouseDown(e), false);\n    elem.addEventListener(\"touchstart\", e => this.mouseDown(e), false);\n    elem.addEventListener(\"mousemove\", e => this.mouseMove(e), false);\n    elem.addEventListener(\"touchmove\", e => this.mouseMove(e), false);\n    elem.addEventListener(\"mouseup\", e => this.mouseUp(e), false);\n    elem.addEventListener(\"touchend\", e => this.mouseUp(e), false);\n  }\n\n  screenPointToSVGPoint(svg, elem, x, y) {\n    const p = svg.createSVGPoint();\n    p.x = x;\n    p.y = y;\n    const CTM = elem.getScreenCTM();\n    return p.matrixTransform(CTM.inverse());\n  }\n\n  mousePointToSVGPoint(e) {\n    return this.screenPointToSVGPoint(this.svg, this.dragElem, e.clientX, e.clientY);\n  }\n\n  mouseDown(e) {\n    const event = e.type === \"mousedown\" ? e : e.changedTouches[0];\n    ;\n    this.dragElem = event.target;\n    const p = this.mousePointToSVGPoint(event);\n    this.offsetX = p.x - this.dragElem.getAttribute(\"cx\");\n    this.offsetY = p.y - this.dragElem.getAttribute(\"cy\");\n    event.preventDefault();\n  }\n\n  mouseUp(e) {\n    this.dragElem = null;\n  }\n\n  mouseMove(e) {\n    if (!this.dragElem) {\n      return;\n    }\n\n    const event = e.type === \"mousemove\" ? e : e.changedTouches[0];\n    const p = this.mousePointToSVGPoint(event);\n    this.dragElem.setAttribute(\"cx\", p.x - this.offsetX);\n    this.dragElem.setAttribute(\"cy\", p.y - this.offsetY);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"circle\", {\n      id: \"ball1\",\n      cx: \"100\",\n      cy: \"100\",\n      r: \"20\",\n      fill: \"blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default DraggableItem;","map":{"version":3,"sources":["/Users/shibuya/isography/atelier/frontend/src/components/draggableItem.js"],"names":["React","DraggableItem","Component","create","svg_id","elem_id","draggable","forEach","id","addElem","constructor","dragElem","offsetX","offsetY","svg","document","getElementById","addEventListener","e","mouseMove","mouseUp","elem","mouseDown","screenPointToSVGPoint","x","y","p","createSVGPoint","CTM","getScreenCTM","matrixTransform","inverse","mousePointToSVGPoint","clientX","clientY","event","type","changedTouches","target","getAttribute","preventDefault","setAttribute","render"],"mappings":"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","sourcesContent":["import React from 'react';\n//\n//   DraggableItem.create('svg', editableItem);\n//\n\n\n/** 選んだ画像をドラッグして移動 **/\n\nclass DraggableItem extends React.Component {\n  static create(svg_id, elem_id) {\n          const draggable = new DraggableItem(svg_id);\n          elem_id.forEach(function (id) {\n              draggable.addElem(id);\n          });\n      }\n\n      constructor(svg_id) {\n          this.dragElem = null;\n          this.offsetX = 0;\n          this.offsetY = 0;\n\n          this.svg = document.getElementById(svg_id);\n          this.svg.addEventListener(\"mousemove\", e => this.mouseMove(e), false);\n          this.svg.addEventListener(\"touchmove\", e => this.mouseMove(e), false);\n          this.svg.addEventListener(\"mouseup\", e => this.mouseUp(e), false);\n          this.svg.addEventListener(\"touchend\", e => this.mouseUp(e), false);\n      }\n\n      addElem(elem_id) {\n          const elem = document.getElementById(elem_id);\n          elem.addEventListener(\"mousedown\", e => this.mouseDown(e), false);\n          elem.addEventListener(\"touchstart\", e => this.mouseDown(e), false);\n          elem.addEventListener(\"mousemove\", e => this.mouseMove(e), false);\n          elem.addEventListener(\"touchmove\", e => this.mouseMove(e), false);\n          elem.addEventListener(\"mouseup\", e => this.mouseUp(e), false);\n          elem.addEventListener(\"touchend\", e => this.mouseUp(e), false);\n      }\n\n      screenPointToSVGPoint(svg, elem, x, y) {\n          const p = svg.createSVGPoint();\n          p.x = x;\n          p.y = y;\n          const CTM = elem.getScreenCTM();\n          return p.matrixTransform(CTM.inverse());\n      }\n\n      mousePointToSVGPoint(e) {\n          return this.screenPointToSVGPoint(\n              this.svg,\n              this.dragElem,\n              e.clientX,\n              e.clientY);\n      }\n\n      mouseDown(e) {\n\n          const event = (e.type === \"mousedown\") ? e : e.changedTouches[0];;\n          this.dragElem = event.target;\n\n          const p = this.mousePointToSVGPoint(event);\n          this.offsetX = p.x - this.dragElem.getAttribute(\"cx\");\n          this.offsetY = p.y - this.dragElem.getAttribute(\"cy\");\n\n          event.preventDefault();\n      }\n\n      mouseUp(e) {\n          this.dragElem = null;\n      }\n\n      mouseMove(e) {\n          if (!this.dragElem) { return; }\n\n          const event = (e.type === \"mousemove\") ? e : e.changedTouches[0];\n          const p = this.mousePointToSVGPoint(event);\n          this.dragElem.setAttribute(\"cx\", p.x - this.offsetX);\n          this.dragElem.setAttribute(\"cy\", p.y - this.offsetY);\n\n          event.preventDefault();\n      }\n\n      render() {\n        return (\n          <circle id=\"ball1\" cx=\"100\" cy=\"100\" r=\"20\" fill=\"blue\" />\n        )\n      }\n}\n\nexport default DraggableItem;\n"]},"metadata":{},"sourceType":"module"}