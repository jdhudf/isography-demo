{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shibuya/isography/atelier/frontend/src/components/draggableItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, ureRef } from 'react'; //\n//   DraggableItem.create('svg', editableItem);\n//\n//   * Drag Items\n//   * Resize Items\n//   * Modify colors of Items\n//\n\n/** 選んだ画像をドラッグして移動 **/\n\nconst DraggableItem = () => {\n  _s();\n\n  const [x, setX] = useState(50);\n  const [y, setY] = useState(50);\n  const [gap, setGap] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const svgRef = useRef(null); // マウス押下時\n\n  const onMouseDown = e => {\n    setIsMouseDown(true);\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mouseX = e.pageX;\n    const mouseY = e.pageY;\n    setGap({\n      x: mouseX - rect.left,\n      y: mouseY - rect.top\n    });\n  }; // マウス押下解除時\n\n\n  const onMouseUp = e => {\n    setIsMouseDown(false);\n  }; // マウス移動時\n\n\n  const onMouseMove = e => {\n    // マウス押下中\n    if (isMouseDown) {\n      const mouseX = e.pageX;\n      const mouseY = e.pageY;\n      const svgRect = svgRef.current.getBoundingClientRect();\n      const relativeX = mouseX - svgRect.left;\n      const relativeY = mouseY - svgRect.top;\n      setX(relativeX - gap.x);\n      setY(relativeY - gap.y);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"circle\", {\n    id: \"ball1\",\n    cx: this.state.cx,\n    cy: this.state.cy,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp,\n    onMouseMove: onMouseMove,\n    r: \"20\",\n    fill: \"blue\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DraggableItem, \"H96f4F+6+oSR+kFvhukP59daWBQ=\");\n\n_c = DraggableItem;\nexport default DraggableItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DraggableItem\");","map":{"version":3,"sources":["/Users/shibuya/isography/atelier/frontend/src/components/draggableItem.js"],"names":["React","useState","ureRef","DraggableItem","x","setX","y","setY","gap","setGap","isMouseDown","setIsMouseDown","svgRef","useRef","onMouseDown","e","rect","currentTarget","getBoundingClientRect","mouseX","pageX","mouseY","pageY","left","top","onMouseUp","onMouseMove","svgRect","current","relativeX","relativeY","state","cx","cy"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,MAAvB,QAAoC,OAApC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYJ,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACK,CAAD,EAAIC,IAAJ,IAAYN,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC;AAACG,IAAAA,CAAC,EAAE,CAAJ;AAAOE,IAAAA,CAAC,EAAE;AAAV,GAAD,CAA9B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMW,MAAM,GAAGC,MAAM,CAAC,IAAD,CAArB,CAN0B,CAQ1B;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,UAAMK,IAAI,GAAGD,CAAC,CAACE,aAAF,CAAgBC,qBAAhB,EAAb;AACA,UAAMC,MAAM,GAAGJ,CAAC,CAACK,KAAjB;AACA,UAAMC,MAAM,GAAGN,CAAC,CAACO,KAAjB;AACAb,IAAAA,MAAM,CAAC;AAAEL,MAAAA,CAAC,EAAEe,MAAM,GAAGH,IAAI,CAACO,IAAnB;AAAyBjB,MAAAA,CAAC,EAAEe,MAAM,GAAGL,IAAI,CAACQ;AAA1C,KAAD,CAAN;AACH,GAND,CAT0B,CAiB1B;;;AACA,QAAMC,SAAS,GAAIV,CAAD,IAAO;AACrBJ,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFD,CAlB0B,CAsB1B;;;AACA,QAAMe,WAAW,GAAIX,CAAD,IAAO;AACvB;AACA,QAAIL,WAAJ,EAAiB;AACb,YAAMS,MAAM,GAAGJ,CAAC,CAACK,KAAjB;AACA,YAAMC,MAAM,GAAGN,CAAC,CAACO,KAAjB;AAEA,YAAMK,OAAO,GAAGf,MAAM,CAACgB,OAAP,CAAeV,qBAAf,EAAhB;AACA,YAAMW,SAAS,GAAGV,MAAM,GAAGQ,OAAO,CAACJ,IAAnC;AACA,YAAMO,SAAS,GAAGT,MAAM,GAAGM,OAAO,CAACH,GAAnC;AAEAnB,MAAAA,IAAI,CAACwB,SAAS,GAAGrB,GAAG,CAACJ,CAAjB,CAAJ;AACAG,MAAAA,IAAI,CAACuB,SAAS,GAAGtB,GAAG,CAACF,CAAjB,CAAJ;AACH;AACJ,GAbD;;AAeA,sBACE;AAAQ,IAAA,EAAE,EAAC,OAAX;AACQ,IAAA,EAAE,EAAE,KAAKyB,KAAL,CAAWC,EADvB;AAEQ,IAAA,EAAE,EAAE,KAAKD,KAAL,CAAWE,EAFvB;AAGQ,IAAA,WAAW,EAAEnB,WAHrB;AAIQ,IAAA,SAAS,EAAEW,SAJnB;AAKQ,IAAA,WAAW,EAAEC,WALrB;AAMQ,IAAA,CAAC,EAAC,IANV;AAMe,IAAA,IAAI,EAAC;AANpB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA/CD;;GAAMvB,a;;KAAAA,a;AAiDN,eAAeA,aAAf","sourcesContent":["import React,{useState,ureRef} from 'react';\n//\n//   DraggableItem.create('svg', editableItem);\n//\n//   * Drag Items\n//   * Resize Items\n//   * Modify colors of Items\n//\n\n\n/** 選んだ画像をドラッグして移動 **/\n\nconst DraggableItem = () => {\n\n  const [x, setX] = useState(50);\n  const [y, setY] = useState(50);\n  const [gap, setGap] = useState({x: 0, y: 0})\n  const [isMouseDown, setIsMouseDown] = useState(false)\n  const svgRef = useRef(null)\n\n  // マウス押下時\n  const onMouseDown = (e) => {\n      setIsMouseDown(true);\n      const rect = e.currentTarget.getBoundingClientRect();\n      const mouseX = e.pageX;\n      const mouseY = e.pageY;\n      setGap({ x: mouseX - rect.left, y: mouseY - rect.top });\n  }\n\n  // マウス押下解除時\n  const onMouseUp = (e) => {\n      setIsMouseDown(false);\n  }\n\n  // マウス移動時\n  const onMouseMove = (e) => {\n      // マウス押下中\n      if (isMouseDown) {\n          const mouseX = e.pageX;\n          const mouseY = e.pageY;\n\n          const svgRect = svgRef.current.getBoundingClientRect();\n          const relativeX = mouseX - svgRect.left;\n          const relativeY = mouseY - svgRect.top;\n\n          setX(relativeX - gap.x);\n          setY(relativeY - gap.y);\n      }\n  }\n\n  return (\n    <circle id=\"ball1\"\n            cx={this.state.cx}\n            cy={this.state.cy}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUp}\n            onMouseMove={onMouseMove}\n            r=\"20\" fill=\"blue\" />\n  )\n}\n\nexport default DraggableItem;\n"]},"metadata":{},"sourceType":"module"}