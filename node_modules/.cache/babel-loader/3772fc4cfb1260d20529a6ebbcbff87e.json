{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shibuya/isography/atelier/frontend/src/components/colorSchemes.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom'; //import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route,\n//  Link\n//} from \"react-router-dom\";\n\nimport Data from \"../data\"; //import ColorPicker from '../components/ColorPicker.js';\n\nclass ColorSchemes extends React.Component {\n  // Start - Get API Json\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api-of-user-json\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        users: result.users\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // END - Get API Json\n\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      users\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-home\",\n        children: [\"Error: \", error.message, /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-home\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    } else {\n      const json = users.color_schemes;\n      console.log(json);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-color-scheme\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-color-scheme\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create a new color scheme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Color scheme name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-scheme-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [Data.map((data, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"color-scheme-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"color-scheme-title\",\n                  children: data.CSTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"color-scheme\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: data.colors.map(c => /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        'background': c\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 48\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this);\n            }), users.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" Username - \", item.first_name, \" \", item.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" E-mail - \", item.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), JSON.parse(item.color_schemes)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default ColorSchemes;","map":{"version":3,"sources":["/Users/shibuya/isography/atelier/frontend/src/components/colorSchemes.js"],"names":["React","Redirect","Data","ColorSchemes","Component","constructor","props","state","error","isLoaded","users","componentDidMount","fetch","then","res","json","result","setState","render","message","color_schemes","console","log","map","data","i","CSTitle","colors","c","item","first_name","last_name","email","JSON","parse","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOC,IAAP,MAAiB,SAAjB,C,CACA;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAEzC;AAEAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,OAAd;AAID,KARL,EASI;AACA;AACA;AACCF,IAAAA,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAjBL;AAmBD,GAhCwC,CAkCzC;;;AAEAU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;;AACA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA,8BAA0CA,KAAK,CAACW,OAAhD,eAAwD,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KAHD,MAGO,IAAI,CAACV,QAAL,EAAe;AACpB,0BAAO;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AAEL,YAAMM,IAAI,GAAGL,KAAK,CAACU,aAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACE;AAAA,uBACGb,IAAI,CAACqB,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,kCACE;AAAK,gBAAA,SAAS,EAAC,mBAAf;AAAA,wCACE;AAAG,kBAAA,SAAS,EAAC,oBAAb;AAAA,4BAAmCD,IAAI,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAI,kBAAA,SAAS,EAAC,cAAd;AAAA,yCACE;AAAA,8BACGF,IAAI,CAACG,MAAL,CAAYJ,GAAZ,CAAgBK,CAAC,iBAAK;AAAM,sBAAA,KAAK,EAAE;AAAC,sCAAcA;AAAf;AAAb;AAAA;AAAA;AAAA;AAAA,4BAAtB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA,iBAAwCH,CAAxC;AAAA;AAAA;AAAA;AAAA,sBADF;AAUD,aAXA,CADH,EAcGf,KAAK,CAACa,GAAN,CAAUM,IAAI,iBACb;AAAA,sCACE;AAAA,2CAAgBA,IAAI,CAACC,UAArB,OAAkCD,IAAI,CAACE,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,yCAAcF,IAAI,CAACG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGGC,IAAI,CAACC,KAAL,CAAWL,IAAI,CAACT,aAAhB,CAHH;AAAA,eAASS,IAAI,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA,oBADD,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAyCD;AACF;;AAzFwC;;AA4F3C,eAAehC,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\n//import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route,\n//  Link\n//} from \"react-router-dom\";\n\nimport Data from \"../data\";\n//import ColorPicker from '../components/ColorPicker.js';\n\nclass ColorSchemes extends React.Component {\n\n  // Start - Get API Json\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      users: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\"/api-of-user-json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            users: result.users,\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  // END - Get API Json\n\n  render() {\n    const { error, isLoaded, users } = this.state;\n    if (error) {\n      return <section className=\"section-home\">Error: {error.message}<Redirect to=\"/login\" /></section>;\n\n    } else if (!isLoaded) {\n      return <section className=\"section-home\">Loading...</section>;\n    } else {\n\n      const json = users.color_schemes;\n      console.log(json);\n      return (\n        <div className=\"section-color-scheme\">\n          <div className=\"create-color-scheme\">\n            <h2>Create a new color scheme</h2>\n            <input type=\"text\" placeholder=\"Color scheme name\"/>\n            <ul>{/*li*/}</ul>\n            <input type=\"submit\" value=\"Create\"/>\n          </div>\n\n          <div className=\"color-scheme-list\">\n            <div>\n              {Data.map((data, i) => {\n                return (\n                  <div className=\"color-scheme-item\" key={i}>\n                    <p className=\"color-scheme-title\">{data.CSTitle}</p>\n                    <ul className=\"color-scheme\">\n                      <li>\n                        {data.colors.map(c => (<span style={{'background': c}}></span>))}\n                      </li>\n                    </ul>\n                  </div>\n                )\n              })}\n\n              {users.map(item => (\n                <li key={item.id}>\n                  <p> Username - {item.first_name} {item.last_name}</p>\n                  <p> E-mail - {item.email}</p>\n                  {JSON.parse(item.color_schemes)}\n                  {/*.map(c => (\n                    <li>\n                      <p>{c.main} {c.sub}</p>\n                      <p>{c.accent}</p>\n                    </li>\n                  ))*/}\n                </li>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default ColorSchemes;\n"]},"metadata":{},"sourceType":"module"}