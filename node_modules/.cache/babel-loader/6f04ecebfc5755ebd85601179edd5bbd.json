{"ast":null,"code":"var _jsxFileName = \"/Users/shibuya/isography/atelier/frontend/src/components/toolspanel.js\";\nimport React from 'react';\nimport Document from \"../document\";\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nclass ToolsPanel extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayColorPicker: false,\n      color: {\n        r: '241',\n        g: '112',\n        b: '19',\n        a: '1'\n      }\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n\n    this.handleChange = color => {\n      this.setState({\n        color: color.rgb\n      });\n    };\n  }\n\n  render() {\n    const colors = Document[0].colors;\n    const li = []; //React Color Setting -- Start\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '25px',\n          height: '25px',\n          borderRadius: '2px',\n          background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`\n        },\n        swatch: {\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer'\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2'\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px'\n        }\n      }\n    }); //React Color Setting  -End\n\n    for (const [index, value] of colors.entries()) {\n      li.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          'background': value\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 31\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"section-toolspanel section-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, li), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.swatch,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), this.state.displayColorPicker ? /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.popover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.cover,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SketchPicker, {\n      color: this.state.color,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })) : null);\n  }\n\n}\n\nexport default ToolsPanel;","map":{"version":3,"sources":["/Users/shibuya/isography/atelier/frontend/src/components/toolspanel.js"],"names":["React","Document","reactCSS","SketchPicker","ToolsPanel","Component","state","displayColorPicker","color","r","g","b","a","handleClick","setState","handleClose","handleChange","rgb","render","colors","li","styles","width","height","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","index","value","entries","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Document from \"../document\";\nimport reactCSS from 'reactcss';\nimport { SketchPicker } from 'react-color';\n\nclass ToolsPanel extends React.Component {\n\n  //React Color Setting\n\n  state = {\n    displayColorPicker: false,\n    color: {\n      r: '241',\n      g: '112',\n      b: '19',\n      a: '1',\n    },\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.setState({ color: color.rgb })\n  };\n\n  render() {\n\n    const colors = Document[0].colors;\n    const li = [];\n\n    //React Color Setting -- Start\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '25px',\n          height: '25px',\n          borderRadius: '2px',\n          background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`,\n        },\n        swatch: {\n          padding: '2px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    //React Color Setting  -End\n\n    for (const [index, value] of colors.entries()) {\n      li.push(<li key={index}><span style={{'background': value}}></span></li>);\n    }\n\n    return (\n      <section className=\"section-toolspanel section-bottom\">\n        <ul>{li}</ul>\n        <div style={ styles.swatch } onClick={ this.handleClick }>\n          <div style={ styles.color } />\n        </div>\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\n          <div style={ styles.cover } onClick={ this.handleClose }/>\n          <SketchPicker color={ this.state.color } onChange={ this.handleChange } />\n        </div> : null }\n      </section>\n    );\n\n}\n}\n\nexport default ToolsPanel;\n"]},"metadata":{},"sourceType":"module"}