{"ast":null,"code":"var _jsxFileName = \"/Users/shibuya/isography/atelier/frontend/src/components/artboard.js\";\nimport React from 'react';\nfetch('/api/v1/list').then(response => {\n  console.log(response.json());\n});\n\nclass Artboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //state初期化\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    //render直後に行いたい処理を書くところ\n    fetch(\"/api/v1/list\") //api\n    .then(res => res.json()).then(json => {\n      console.log(json.rates);\n      this.setState({\n        isLoaded: true,\n        items: json.rates\n      });\n    });\n  }\n\n  render() {\n    var {\n      items,\n      isLoaded\n    } = this.state;\n    console.log(items);\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      }, \"...Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, Object.keys(items).map(key => /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }, key, \" - \", items[key]))));\n    }\n  }\n\n}\n\nexport default Artboard;","map":{"version":3,"sources":["/Users/shibuya/isography/atelier/frontend/src/components/artboard.js"],"names":["React","fetch","then","response","console","log","json","Artboard","Component","constructor","props","state","isLoaded","items","componentDidMount","res","rates","setState","render","Object","keys","map","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAC,KAAK,CAAC,cAAD,CAAL,CAAsBC,IAAtB,CAA2BC,QAAQ,IAAI;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,EAAZ;AACD,CAFD;;AAIA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAE;AACbC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAAE;AACpBb,IAAAA,KAAK,CAAC,cAAD,CAAL,CAAsB;AAAtB,KACGC,IADH,CACQa,GAAG,IAAIA,GAAG,CAACT,IAAJ,EADf,EAEGJ,IAFH,CAEQI,IAAI,IAAI;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACU,KAAjB;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEP,IAAI,CAACU;AAFA,OAAd;AAID,KARH;AASD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEL,MAAAA,KAAF;AAASD,MAAAA;AAAT,QAAsB,KAAKD,KAA/B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;;AACA,QAAI,CAACD,QAAL,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,GAAnB,CAAuBC,GAAG,iBACzB;AAAI,QAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeA,GAAf,SAAuBT,KAAK,CAACS,GAAD,CAA5B,CADD,CADH,CADF,CADF;AASD;AAEJ;;AArCsC;;AAwCvC,eAAef,QAAf","sourcesContent":["import React from 'react';\nfetch('/api/v1/list').then(response => {\n  console.log(response.json());\n});\n\nclass Artboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { //state初期化\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() { //render直後に行いたい処理を書くところ\n    fetch(\"/api/v1/list\") //api\n      .then(res => res.json())\n      .then(json => {\n        console.log(json.rates);\n        this.setState({\n          isLoaded: true,\n          items: json.rates\n        });\n      });\n  }\n\n  render() {\n    var { items, isLoaded } = this.state;\n    console.log(items);\n    if (!isLoaded) {\n      return <div>...Loading</div>;\n    } else {\n      return (\n        <div>\n          <ul>\n            {Object.keys(items).map(key => (\n              <li key={key}>{key} - {items[key]}</li>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n\n}\n}\n\nexport default Artboard;\n"]},"metadata":{},"sourceType":"module"}